appName: URJC gestiongrupos - Backend Backoffice
description: URJC gestiongrupos - Backend Backoffice - Swagger Node - N-Layer
environment: dev - dockerized
infrastructure:
  logger:
    level: debug
  authentication:
    userRepository: mongo #Available Options: mongo, mem, middlewarehlf
    tokenExpiration: 30 #minutes
    tokenSecret: wearethebeast
    bcryptSaltRounds: 12
    users:
    - username: admin
      password: alfa1beta2
      enabled: true
    groupsToAuthenticate: # User must be member of these groups to be authenticated in the app
    - name: Administrators Group
  express:
    servertimeout: 60000 #miliseconds
    port: 8080
    enableCors: true
    upload:
      fileUploadedMaxLength: 5 #MBytes
      # Multipart Support using multer example
      # uploadFolder: uploads # For multipart requests
      # uploadApi:
      # - apiMethod: "/api/private/file"
      #   fields:
      #   - name: fileuploaded
      #   - maxCount: 1
    privateRouting:
      enabled: true
      routes:
      - route: "/api/private/*"
  mongo:
    mongoURL: mongodb://admin:admin@urjcgestiongrupos-mongodb:27017
    database: urjcgestiongruposDB
    reconnectTime: 20000 #miliseconds
  middlewarehlf:
    url: http://urjcgestiongrupos-middleware-hlf:10080
    authentication:
      username: middlehlfuser
      passwd: alfa1beta2
    apiPrefix: "/api"
    chaincodePrefix: "/private/chaincode"
    vote:
      chaincodeId: vote
      createVoteMethod: "create"
      findVoteByIdMethod: "findById"
      createInPersonVotesMethod: "createInPersonVotes"
    call:
      chaincodeId: call
      createCallMethod: "create"
      findVoteByIdMethod: "findById"
      findCallsMethod: "find"
      findCallByIdMethod: "findById"
      updateCallMethod: "update"
      deleteCallMethod: "deleteOneById"
      updateCounterCallMethod: "countingById"
      getBlockchainReportMethod: "getBlockchainReport"
appProperties:
  defaultNumberOfTokens: 100
  bytesPerCouponId: 8